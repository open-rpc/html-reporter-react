name: Publish Release

on:
  pull_request:
    types: [closed]

jobs:
  publish-release:
    permissions:
      contents: write
    # The second argument to startsWith() must match the release-branch-prefix
    # input to this Action. Here, we use the default, "release/".
    if: |
      github.event.pull_request.merged == true &&
      startsWith(github.event.pull_request.head.ref, 'release/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get Node.js version
        id: nvm
        run: echo ::set-output name=NODE_VERSION::$(cat .nvmrc)
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ steps.nvm.outputs.NODE_VERSION }}
      - uses: MetaMask/action-publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: yarn --frozen-lockfile
      - name: Get release version
        id: version
        run: |
          PREFIX='release/'
          echo ::set-output name=NEW_VERSION::${GITHUB_HEAD_REF#"$PREFIX"}
      - run: yarn build
    # Setup .npmrc file to publish to npm
      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

on:
  workflow_call:
    secrets:
      NPM_TOKEN:
        required: true

jobs:
  publish-release:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.sha }}
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
      - uses: MetaMask/action-publish-release@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Install
        run: |
          yarn install
          yarn build
      - uses: actions/cache@v3
        id: restore-build
        with:
          path: |
            ./dist
            ./node_modules/.yarn-state.yml
          key: ${{ github.sha }}

  publish-npm:
    environment: npm-publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.sha }}
      - uses: actions/cache@v3
        id: restore-build
        with:
          path: |
            ./dist
            ./node_modules/.yarn-state.yml
          key: ${{ github.sha }}


  get-release-version:
    runs-on: ubuntu-latest
    needs: publish-npm
    outputs:
      RELEASE_VERSION: ${{ steps.get-release-version.outputs.RELEASE_VERSION }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.sha }}
      - id: get-release-version
        shell: bash
        run: ./scripts/get.sh ".version" "RELEASE_VERSION"
